!(function (t) {
  if (typeof exports === "object" && typeof module !== "undefined")
    {module.exports = t();}
  else if (typeof define === "function" && define.amd) define([], t);
  else {
    (typeof window !== "undefined"
      ? window
      : typeof global !== "undefined"
      ? global
      : typeof self !== "undefined"
      ? self
      : this
    ).anitomyscript = t();
  }
})(function () {
  const t = function (t) {
      let e;
      return function (n) {
        return e || t((e = { exports: {}, parent: n }), e.exports), e.exports;
      };
    };
    const e = t(function (t, e) {
      (function (t) {
        function n(t, e) {
          for (var n = 0, r = t.length - 1; r >= 0; r--) {
            const a = t[r];
            a === "."
              ? t.splice(r, 1)
              : a === ".."
              ? (t.splice(r, 1), n++)
              : n && (t.splice(r, 1), n--);
          }
          if (e) for (; n--; n) t.unshift("..");
          return t;
        }
        function r(t, e) {
          if (t.filter) return t.filter(e);
          for (var n = [], r = 0; r < t.length; r++)
            {e(t[r], r, t) && n.push(t[r]);}
          return n;
        }
        (e.resolve = function () {
          for (
            var e = "", a = !1, i = arguments.length - 1;
            i >= -1 && !a;
            i--
          ) {
            const o = i >= 0 ? arguments[i] : t.cwd();
            if (typeof o !== "string")
              {throw new TypeError("Arguments to path.resolve must be strings");}
            o && ((e = `${o  }/${  e}`), (a = o.charAt(0) === "/"));
          }
          return (
            (a ? "/" : "") +
              (e = n(
                r(e.split("/"), (t) => !!t),
                !a
              ).join("/")) || "."
          );
        }),
          (e.normalize = function (t) {
            const i = e.isAbsolute(t);
              const o = a(t, -1) === "/";
            return (
              (t = n(
                r(t.split("/"), (t) => !!t),
                !i
              ).join("/")) ||
                i ||
                (t = "."),
              t && o && (t += "/"),
              (i ? "/" : "") + t
            );
          }),
          (e.isAbsolute = function (t) {
            return t.charAt(0) === "/";
          }),
          (e.join = function () {
            const t = Array.prototype.slice.call(arguments, 0);
            return e.normalize(
              r(t, (t, e) => {
                if (typeof t !== "string")
                  {throw new TypeError("Arguments to path.join must be strings");}
                return t;
              }).join("/")
            );
          }),
          (e.relative = function (t, n) {
            function r(t) {
              for (var e = 0; e < t.length && t[e] === ""; e++);
              for (var n = t.length - 1; n >= 0 && t[n] === ""; n--);
              return e > n ? [] : t.slice(e, n - e + 1);
            }
            (t = e.resolve(t).substr(1)), (n = e.resolve(n).substr(1));
            for (
              var a = r(t.split("/")),
                i = r(n.split("/")),
                o = Math.min(a.length, i.length),
                u = o,
                c = 0;
              c < o;
              c++
            )
              {if (a[c] !== i[c]) {
                u = c;
                break;
              }}
            let l = [];
            for (c = u; c < a.length; c++) l.push("..");
            return (l = l.concat(i.slice(u))).join("/");
          }),
          (e.sep = "/"),
          (e.delimiter = ":"),
          (e.dirname = function (t) {
            if ((typeof t !== "string" && (t += ""), t.length === 0)) return ".";
            for (
              var e = t.charCodeAt(0),
                n = e === 47,
                r = -1,
                a = !0,
                i = t.length - 1;
              i >= 1;
              --i
            )
              {if ((e = t.charCodeAt(i)) === 47) {
                if (!a) {
                  r = i;
                  break;
                }
              } else a = !1;}
            return r === -1
              ? n
                ? "/"
                : "."
              : n && r === 1
              ? "/"
              : t.slice(0, r);
          }),
          (e.basename = function (t, e) {
            let n = (function (t) {
              typeof t !== "string" && (t += "");
              let e;
                let n = 0;
                let r = -1;
                let a = !0;
              for (e = t.length - 1; e >= 0; --e)
                {if (t.charCodeAt(e) === 47) {
                  if (!a) {
                    n = e + 1;
                    break;
                  }
                } else r === -1 && ((a = !1), (r = e + 1));}
              return r === -1 ? "" : t.slice(n, r);
            })(t);
            return (
              e &&
                n.substr(-1 * e.length) === e &&
                (n = n.substr(0, n.length - e.length)),
              n
            );
          }),
          (e.extname = function (t) {
            typeof t !== "string" && (t += "");
            for (
              var e = -1, n = 0, r = -1, a = !0, i = 0, o = t.length - 1;
              o >= 0;
              --o
            ) {
              const u = t.charCodeAt(o);
              if (u !== 47)
                {r === -1 && ((a = !1), (r = o + 1)),
                  u === 46
                    ? e === -1
                      ? (e = o)
                      : i !== 1 && (i = 1)
                    : e !== -1 && (i = -1);}
              else if (!a) {
                n = o + 1;
                break;
              }
            }
            return e === -1 ||
              r === -1 ||
              i === 0 ||
              (i === 1 && e === r - 1 && e === n + 1)
              ? ""
              : t.slice(e, r);
          });
        var a =
          "ab".substr(-1) === "b"
            ? function (t, e, n) {
                return t.substr(e, n);
              }
            : function (t, e, n) {
                return e < 0 && (e = t.length + e), t.substr(e, n);
              };
      }.call(this, c));
    });
    const n = t((t, e) => {});
    let r = { exports: {} };
    const a = (function (t) {
      
      let e;
        const n = Object.prototype;
        const r = n.hasOwnProperty;
        const a = typeof Symbol === "function" ? Symbol : {};
        const i = a.iterator || "@@iterator";
        const o = a.asyncIterator || "@@asyncIterator";
        const u = a.toStringTag || "@@toStringTag";
      function c(t, e, n, r) {
        const a = e && e.prototype instanceof d ? e : d;
          const i = Object.create(a.prototype);
          const o = new x(r || []);
        return (
          (i._invoke = (function (t, e, n) {
            let r = s;
            return function (a, i) {
              if (r === p) throw new Error("Generator is already running");
              if (r === h) {
                if (a === "throw") throw i;
                return O();
              }
              for (n.method = a, n.arg = i; ; ) {
                const o = n.delegate;
                if (o) {
                  const u = T(o, n);
                  if (u) {
                    if (u === y) continue;
                    return u;
                  }
                }
                if (n.method === "next") n.sent = n._sent = n.arg;
                else if (n.method === "throw") {
                  if (r === s) throw ((r = h), n.arg);
                  n.dispatchException(n.arg);
                } else n.method === "return" && n.abrupt("return", n.arg);
                r = p;
                const c = l(t, e, n);
                if (c.type === "normal") {
                  if (((r = n.done ? h : f), c.arg === y)) continue;
                  return { value: c.arg, done: n.done };
                }
                c.type === "throw" &&
                  ((r = h), (n.method = "throw"), (n.arg = c.arg));
              }
            };
          })(t, n, o)),
          i
        );
      }
      function l(t, e, n) {
        try {
          return { type: "normal", arg: t.call(e, n) };
        } catch (r) {
          return { type: "throw", arg: r };
        }
      }
      t.wrap = c;
      var s = "suspendedStart";
        var f = "suspendedYield";
        var p = "executing";
        var h = "completed";
        var y = {};
      function d() {}
      function m() {}
      function v() {}
      let g = {};
      g[i] = function () {
        return this;
      };
      const w = Object.getPrototypeOf;
        const b = w && w(w(j([])));
      b && b !== n && r.call(b, i) && (g = b);
      const E = (v.prototype = d.prototype = Object.create(g));
      function C(t) {
        ["next", "throw", "return"].forEach((e) => {
          t[e] = function (t) {
            return this._invoke(e, t);
          };
        });
      }
      function _(t) {
        let e;
        this._invoke = function (n, a) {
          function i() {
            return new Promise((e, i) => {
              !(function e(n, a, i, o) {
                const u = l(t[n], t, a);
                if (u.type !== "throw") {
                  const c = u.arg;
                    const s = c.value;
                  return s && typeof s === "object" && r.call(s, "__await")
                    ? Promise.resolve(s.__await).then(
                        (t) => {
                          e("next", t, i, o);
                        },
                        (t) => {
                          e("throw", t, i, o);
                        }
                      )
                    : Promise.resolve(s).then(
                        (t) => {
                          (c.value = t), i(c);
                        },
                        (t) => e("throw", t, i, o)
                      );
                }
                o(u.arg);
              })(n, a, e, i);
            });
          }
          return (e = e ? e.then(i, i) : i());
        };
      }
      function T(t, n) {
        const r = t.iterator[n.method];
        if (r === e) {
          if (((n.delegate = null), n.method === "throw")) {
            if (
              t.iterator.return &&
              ((n.method = "return"),
              (n.arg = e),
              T(t, n),
              n.method === "throw")
            )
              {return y;}
            (n.method = "throw"),
              (n.arg = new TypeError(
                "The iterator does not provide a 'throw' method"
              ));
          }
          return y;
        }
        const a = l(r, t.iterator, n.arg);
        if (a.type === "throw")
          {return (n.method = "throw"), (n.arg = a.arg), (n.delegate = null), y;}
        const i = a.arg;
        return i
          ? i.done
            ? ((n[t.resultName] = i.value),
              (n.next = t.nextLoc),
              n.method !== "return" && ((n.method = "next"), (n.arg = e)),
              (n.delegate = null),
              y)
            : i
          : ((n.method = "throw"),
            (n.arg = new TypeError("iterator result is not an object")),
            (n.delegate = null),
            y);
      }
      function A(t) {
        const e = { tryLoc: t[0] };
        1 in t && (e.catchLoc = t[1]),
          2 in t && ((e.finallyLoc = t[2]), (e.afterLoc = t[3])),
          this.tryEntries.push(e);
      }
      function k(t) {
        const e = t.completion || {};
        (e.type = "normal"), delete e.arg, (t.completion = e);
      }
      function x(t) {
        (this.tryEntries = [{ tryLoc: "root" }]),
          t.forEach(A, this),
          this.reset(!0);
      }
      function j(t) {
        if (t) {
          const n = t[i];
          if (n) return n.call(t);
          if (typeof t.next === "function") return t;
          if (!isNaN(t.length)) {
            let a = -1;
              const o = function n() {
                for (; ++a < t.length; )
                  {if (r.call(t, a)) return (n.value = t[a]), (n.done = !1), n;}
                return (n.value = e), (n.done = !0), n;
              };
            return (o.next = o);
          }
        }
        return { next: O };
      }
      function O() {
        return { value: e, done: !0 };
      }
      return (
        (m.prototype = E.constructor = v),
        (v.constructor = m),
        (v[u] = m.displayName = "GeneratorFunction"),
        (t.isGeneratorFunction = function (t) {
          const e = typeof t === "function" && t.constructor;
          return (
            !!e &&
            (e === m || (e.displayName || e.name) === "GeneratorFunction")
          );
        }),
        (t.mark = function (t) {
          return (
            Object.setPrototypeOf
              ? Object.setPrototypeOf(t, v)
              : ((t.__proto__ = v), u in t || (t[u] = "GeneratorFunction")),
            (t.prototype = Object.create(E)),
            t
          );
        }),
        (t.awrap = function (t) {
          return { __await: t };
        }),
        C(_.prototype),
        (_.prototype[o] = function () {
          return this;
        }),
        (t.AsyncIterator = _),
        (t.async = function (e, n, r, a) {
          const i = new _(c(e, n, r, a));
          return t.isGeneratorFunction(n)
            ? i
            : i.next().then((t) => (t.done ? t.value : i.next()));
        }),
        C(E),
        (E[u] = "Generator"),
        (E[i] = function () {
          return this;
        }),
        (E.toString = function () {
          return "[object Generator]";
        }),
        (t.keys = function (t) {
          const e = [];
          for (const n in t) e.push(n);
          return (
            e.reverse(),
            function n() {
              for (; e.length; ) {
                const r = e.pop();
                if (r in t) return (n.value = r), (n.done = !1), n;
              }
              return (n.done = !0), n;
            }
          );
        }),
        (t.values = j),
        (x.prototype = {
          constructor: x,
          reset (t) {
            if (
              ((this.prev = 0),
              (this.next = 0),
              (this.sent = this._sent = e),
              (this.done = !1),
              (this.delegate = null),
              (this.method = "next"),
              (this.arg = e),
              this.tryEntries.forEach(k),
              !t)
            )
              {for (const n in this)
                {n.charAt(0) === "t" &&
                  r.call(this, n) &&
                  !isNaN(+n.slice(1)) &&
                  (this[n] = e);}}
          },
          stop () {
            this.done = !0;
            const t = this.tryEntries[0].completion;
            if (t.type === "throw") throw t.arg;
            return this.rval;
          },
          dispatchException (t) {
            if (this.done) throw t;
            const n = this;
            function a(r, a) {
              return (
                (u.type = "throw"),
                (u.arg = t),
                (n.next = r),
                a && ((n.method = "next"), (n.arg = e)),
                !!a
              );
            }
            for (let i = this.tryEntries.length - 1; i >= 0; --i) {
              const o = this.tryEntries[i];
                var u = o.completion;
              if (o.tryLoc === "root") return a("end");
              if (o.tryLoc <= this.prev) {
                const c = r.call(o, "catchLoc");
                  const l = r.call(o, "finallyLoc");
                if (c && l) {
                  if (this.prev < o.catchLoc) return a(o.catchLoc, !0);
                  if (this.prev < o.finallyLoc) return a(o.finallyLoc);
                } else if (c) {
                  if (this.prev < o.catchLoc) return a(o.catchLoc, !0);
                } else {
                  if (!l)
                    {throw new Error("try statement without catch or finally");}
                  if (this.prev < o.finallyLoc) return a(o.finallyLoc);
                }
              }
            }
          },
          abrupt (t, e) {
            for (let n = this.tryEntries.length - 1; n >= 0; --n) {
              const a = this.tryEntries[n];
              if (
                a.tryLoc <= this.prev &&
                r.call(a, "finallyLoc") &&
                this.prev < a.finallyLoc
              ) {
                var i = a;
                break;
              }
            }
            i &&
              (t === "break" || t === "continue") &&
              i.tryLoc <= e &&
              e <= i.finallyLoc &&
              (i = null);
            const o = i ? i.completion : {};
            return (
              (o.type = t),
              (o.arg = e),
              i
                ? ((this.method = "next"), (this.next = i.finallyLoc), y)
                : this.complete(o)
            );
          },
          complete (t, e) {
            if (t.type === "throw") throw t.arg;
            return (
              t.type === "break" || t.type === "continue"
                ? (this.next = t.arg)
                : t.type === "return"
                ? ((this.rval = this.arg = t.arg),
                  (this.method = "return"),
                  (this.next = "end"))
                : t.type === "normal" && e && (this.next = e),
              y
            );
          },
          finish (t) {
            for (let e = this.tryEntries.length - 1; e >= 0; --e) {
              const n = this.tryEntries[e];
              if (n.finallyLoc === t)
                {return this.complete(n.completion, n.afterLoc), k(n), y;}
            }
          },
          catch (t) {
            for (let e = this.tryEntries.length - 1; e >= 0; --e) {
              const n = this.tryEntries[e];
              if (n.tryLoc === t) {
                const r = n.completion;
                if (r.type === "throw") {
                  var a = r.arg;
                  k(n);
                }
                return a;
              }
            }
            throw new Error("illegal catch attempt");
          },
          delegateYield (t, n, r) {
            return (
              (this.delegate = { iterator: j(t), resultName: n, nextLoc: r }),
              this.method === "next" && (this.arg = e),
              y
            );
          },
        }),
        t
      );
    })(r.exports);
  try {
    regeneratorRuntime = a;
  } catch (F) {
    Function("r", "regeneratorRuntime = r")(a);
  }
  let i;
    let o;
    const u = (r = r.exports);
    var c = {};
    const l = (c = {});
  function s() {
    throw new Error("setTimeout has not been defined");
  }
  function f() {
    throw new Error("clearTimeout has not been defined");
  }
  function p(t) {
    if (i === setTimeout) return setTimeout(t, 0);
    if ((i === s || !i) && setTimeout)
      {return (i = setTimeout), setTimeout(t, 0);}
    try {
      return i(t, 0);
    } catch (e) {
      try {
        return i.call(null, t, 0);
      } catch (e) {
        return i.call(this, t, 0);
      }
    }
  }
  !(function () {
    try {
      i = typeof setTimeout === "function" ? setTimeout : s;
    } catch (t) {
      i = s;
    }
    try {
      o = typeof clearTimeout === "function" ? clearTimeout : f;
    } catch (t) {
      o = f;
    }
  })();
  let h;
    let y = [];
    let d = !1;
    let m = -1;
  function v() {
    d &&
      h &&
      ((d = !1), h.length ? (y = h.concat(y)) : (m = -1), y.length && g());
  }
  function g() {
    if (!d) {
      const t = p(v);
      d = !0;
      for (let e = y.length; e; ) {
        for (h = y, y = []; ++m < e; ) h && h[m].run();
        (m = -1), (e = y.length);
      }
      (h = null),
        (d = !1),
        (function (t) {
          if (o === clearTimeout) return clearTimeout(t);
          if ((o === f || !o) && clearTimeout)
            {return (o = clearTimeout), clearTimeout(t);}
          try {
            o(t);
          } catch (e) {
            try {
              return o.call(null, t);
            } catch (e) {
              return o.call(this, t);
            }
          }
        })(t);
    }
  }
  function w(t, e) {
    (this.fun = t), (this.array = e);
  }
  function b() {}
  (l.nextTick = function (t) {
    const e = new Array(arguments.length - 1);
    if (arguments.length > 1)
      {for (let n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];}
    y.push(new w(t, e)), y.length !== 1 || d || p(g);
  }),
    (w.prototype.run = function () {
      this.fun.apply(null, this.array);
    }),
    (l.title = "browser"),
    (l.browser = !0),
    (l.env = {}),
    (l.argv = []),
    (l.version = ""),
    (l.versions = {}),
    (l.on = b),
    (l.addListener = b),
    (l.once = b),
    (l.off = b),
    (l.removeListener = b),
    (l.removeAllListeners = b),
    (l.emit = b),
    (l.prependListener = b),
    (l.prependOnceListener = b),
    (l.listeners = function (t) {
      return [];
    }),
    (l.binding = function (t) {
      throw new Error("process.binding is not supported");
    }),
    (l.cwd = function () {
      return "/";
    }),
    (l.chdir = function (t) {
      throw new Error("process.chdir is not supported");
    }),
    (l.umask = function () {
      return 0;
    });
  let E = { exports: {} };
  (function (t, r, a) {
    let i;
      const o =
        ((i =
          typeof document !== "undefined" && document.currentScript
            ? document.currentScript.src
            : void 0),
        void 0 !== r && (i = i || r),
        function (r) {
          let o;
          (r = r || {}), o || (o = void 0 !== r ? r : {});
          let u;
            let c = {};
          for (u in o) o.hasOwnProperty(u) && (c[u] = o[u]);
          let l;
            let s;
            let f = "./this.program";
            let p = !1;
            let h = !1;
          (p = typeof window === "object"),
            (h = typeof importScripts === "function"),
            (l =
              typeof t === "object" &&
              typeof t.versions === "object" &&
              typeof t.versions.node === "string" &&
              !p &&
              !h),
            (s = !p && !l && !h);
          let y;
            let d;
            let m;
            let v;
            let g = "";
          l
            ? ((g = `${a  }/`),
              (y = function (t, r) {
                return (
                  m || (m = n({})),
                  v || (v = e({})),
                  (t = v.normalize(t)),
                  m.readFileSync(t, r ? null : "utf8")
                );
              }),
              (d = function (t) {
                return (t = y(t, !0)).buffer || (t = new Uint8Array(t)), t;
              }),
              t.argv.length > 1 && (f = t.argv[1].replace(/\\/g, "/")),
              t.argv.slice(2),
              t.on("uncaughtException", (t) => {
                throw t;
              }),
              t.on("unhandledRejection", Z),
              (o.inspect = function () {
                return "[Emscripten Module object]";
              }))
            : s
            ? (typeof read !== "undefined" &&
                (y = function (t) {
                  return read(t);
                }),
              (d = function (t) {
                return typeof readbuffer === "function"
                  ? new Uint8Array(readbuffer(t))
                  : (t = read(t, "binary"));
              }),
              typeof print !== "undefined" &&
                (typeof console === "undefined" && (console = {}),
                (console.log = print),
                (console.warn = console.error =
                  typeof printErr !== "undefined" ? printErr : print)))
            : (p || h) &&
              (h
                ? (g = self.location.href)
                : document.currentScript && (g = document.currentScript.src),
              i && (g = i),
              (g =
                g.indexOf("blob:") !== 0
                  ? g.substr(0, g.lastIndexOf("/") + 1)
                  : ""),
              (y = function (t) {
                const e = new XMLHttpRequest();
                return e.open("GET", t, !1), e.send(null), e.responseText;
              }),
              h &&
                (d = function (t) {
                  const e = new XMLHttpRequest();
                  return (
                    e.open("GET", t, !1),
                    (e.responseType = "arraybuffer"),
                    e.send(null),
                    new Uint8Array(e.response)
                  );
                }));
          let w;
            const b = o.print || console.log.bind(console);
            const E = o.printErr || console.warn.bind(console);
          for (u in c) c.hasOwnProperty(u) && (o[u] = c[u]);
          (c = null),
            o.thisProgram && (f = o.thisProgram),
            o.wasmBinary && (w = o.wasmBinary),
            typeof WebAssembly !== "object" &&
              E("no native wasm support detected");
          let C;
            const _ = new WebAssembly.Table({
              initial: 409,
              maximum: 409,
              element: "anyfunc",
            });
            let T = !1;
            const A =
              typeof TextDecoder !== "undefined"
                ? new TextDecoder("utf8")
                : void 0;
          function k(t, e, n) {
            let r = e + n;
            for (n = e; t[n] && !(n >= r); ) ++n;
            if (n - e > 16 && t.subarray && A)
              {return A.decode(t.subarray(e, n));}
            for (r = ""; e < n; ) {
              let a = t[e++];
              if (128 & a) {
                const i = 63 & t[e++];
                if ((224 & a) == 192)
                  {r += String.fromCharCode(((31 & a) << 6) | i);}
                else {
                  const o = 63 & t[e++];
                  (a =
                    (240 & a) == 224
                      ? ((15 & a) << 12) | (i << 6) | o
                      : ((7 & a) << 18) | (i << 12) | (o << 6) | (63 & t[e++])) <
                  65536
                    ? (r += String.fromCharCode(a))
                    : ((a -= 65536),
                      (r += String.fromCharCode(
                        55296 | (a >> 10),
                        56320 | (1023 & a)
                      )));
                }
              } else r += String.fromCharCode(a);
            }
            return r;
          }
          function x(t) {
            return t ? k(S, t, void 0) : "";
          }
          function j(t, e, n, r) {
            if (r > 0) {
              r = n + r - 1;
              for (let a = 0; a < t.length; ++a) {
                let i = t.charCodeAt(a);
                if (
                  (i >= 55296 &&
                    i <= 57343 &&
                    (i =
                      (65536 + ((1023 & i) << 10)) |
                      (1023 & t.charCodeAt(++a))),
                  i <= 127)
                ) {
                  if (n >= r) break;
                  e[n++] = i;
                } else {
                  if (i <= 2047) {
                    if (n + 1 >= r) break;
                    e[n++] = 192 | (i >> 6);
                  } else {
                    if (i <= 65535) {
                      if (n + 2 >= r) break;
                      e[n++] = 224 | (i >> 12);
                    } else {
                      if (n + 3 >= r) break;
                      (e[n++] = 240 | (i >> 18)),
                        (e[n++] = 128 | ((i >> 12) & 63));
                    }
                    e[n++] = 128 | ((i >> 6) & 63);
                  }
                  e[n++] = 128 | (63 & i);
                }
              }
              e[n] = 0;
            }
          }
          function O(t) {
            for (var e = 0, n = 0; n < t.length; ++n) {
              let r = t.charCodeAt(n);
              r >= 55296 &&
                r <= 57343 &&
                (r = (65536 + ((1023 & r) << 10)) | (1023 & t.charCodeAt(++n))),
                r <= 127
                  ? ++e
                  : (e = r <= 2047 ? e + 2 : r <= 65535 ? e + 3 : e + 4);
            }
            return e;
          }
          typeof TextDecoder !== "undefined" && new TextDecoder("utf-16le");
          let P;
            let F;
            let S;
            let D;
            let W;
            let L;
            let M;
            let I;
            let R;
            let U = o.TOTAL_MEMORY || 16777216;
          (C = o.wasmMemory
            ? o.wasmMemory
            : new WebAssembly.Memory({
                initial: U / 65536,
                maximum: U / 65536,
              })) && (P = C.buffer),
            (U = P.byteLength);
          const N = P;
          function Y(t) {
            for (; t.length > 0; ) {
              const e = t.shift();
              if (typeof e === "function") e();
              else {
                const n = e.Ka;
                typeof n === "number"
                  ? void 0 === e.Ca
                    ? o.dynCall_v(n)
                    : o.dynCall_vi(n, e.Ca)
                  : n(void 0 === e.Ca ? null : e.Ca);
              }
            }
          }
          (P = N),
            (o.HEAP8 = F = new Int8Array(N)),
            (o.HEAP16 = D = new Int16Array(N)),
            (o.HEAP32 = L = new Int32Array(N)),
            (o.HEAPU8 = S = new Uint8Array(N)),
            (o.HEAPU16 = W = new Uint16Array(N)),
            (o.HEAPU32 = M = new Uint32Array(N)),
            (o.HEAPF32 = I = new Float32Array(N)),
            (o.HEAPF64 = R = new Float64Array(N)),
            (L[8616] = 5277504);
          const H = [];
            const B = [];
            const V = [];
            const z = [];
          function G() {
            const t = o.preRun.shift();
            H.unshift(t);
          }
          let q = 0;
            let J = null;
            let X = null;
          function Z(t) {
            throw (
              (o.onAbort && o.onAbort(t),
              b(t),
              E(t),
              (T = !0),
              new WebAssembly.RuntimeError(
                `abort(${  t  }). Build with -s ASSERTIONS=1 for more info.`
              ))
            );
          }
          function K() {
            const t = Q;
            return String.prototype.startsWith
              ? t.startsWith("data:application/octet-stream;base64,")
              : t.indexOf("data:application/octet-stream;base64,") === 0;
          }
          (o.preloadedImages = {}), (o.preloadedAudios = {});
          var Q = "anitomyscript.wasm";
          if (!K()) {
            const $ = Q;
            Q = o.locateFile ? o.locateFile($, g) : g + $;
          }
          function tt() {
            try {
              if (w) return new Uint8Array(w);
              if (d) return d(Q);
              throw "both async and sync fetching of the wasm failed";
            } catch (t) {
              Z(t);
            }
          }
          B.push({
            Ka () {
              ge();
            },
          });
          const et = [null, [], []];
            let nt = 0;
          function rt() {
            return L[((nt += 4) - 4) >> 2];
          }
          const at = {};
          function it(t) {
            switch (t) {
              case 1:
                return 0;
              case 2:
                return 1;
              case 4:
                return 2;
              case 8:
                return 3;
              default:
                throw new TypeError(`Unknown type size: ${  t}`);
            }
          }
          let ot = void 0;
          function ut(t) {
            for (var e = ""; S[t]; ) e += ot[S[t++]];
            return e;
          }
          const ct = {};
            const lt = {};
            const st = {};
          function ft(t) {
            if (void 0 === t) return "_unknown";
            const e = (t = t.replace(/[^a-zA-Z0-9_]/g, "$")).charCodeAt(0);
            return e >= 48 && e <= 57 ? `_${  t}` : t;
          }
          function pt(t, e) {
            return (
              (t = ft(t)),
              new Function(
                "body",
                `return function ${ 
                  t 
                  }() {\n    "use strict";    return body.apply(this, arguments);\n};\n`
              )(e)
            );
          }
          function ht(t) {
            const e = Error;
              const n = pt(t, function (e) {
                (this.name = t),
                  (this.message = e),
                  void 0 !== (e = Error(e).stack) &&
                    (this.stack =
                      `${this.toString() 
                      }\n${ 
                      e.replace(/^Error(:[^\n]*)?\n/, "")}`);
              });
            return (
              (n.prototype = Object.create(e.prototype)),
              (n.prototype.constructor = n),
              (n.prototype.toString = function () {
                return void 0 === this.message
                  ? this.name
                  : `${this.name  }: ${  this.message}`;
              }),
              n
            );
          }
          let yt = void 0;
          function dt(t) {
            throw new yt(t);
          }
          let mt = void 0;
          function vt(t) {
            throw new mt(t);
          }
          function gt(t, e, n) {
            function r(e) {
              (e = n(e)).length !== t.length &&
                vt("Mismatched type converter count");
              for (let r = 0; r < t.length; ++r) wt(t[r], e[r]);
            }
            t.forEach((t) => {
              st[t] = e;
            });
            const a = Array(e.length);
              const i = [];
              let o = 0;
            e.forEach((t, e) => {
              lt.hasOwnProperty(t)
                ? (a[e] = lt[t])
                : (i.push(t),
                  ct.hasOwnProperty(t) || (ct[t] = []),
                  ct[t].push(() => {
                    (a[e] = lt[t]), ++o === i.length && r(a);
                  }));
            }),
              i.length === 0 && r(a);
          }
          function wt(t, e, n) {
            if (((n = n || {}), !("argPackAdvance" in e)))
              {throw new TypeError(
                "registerType registeredInstance requires argPackAdvance"
              );}
            const r = e.name;
            if (
              (t ||
                dt(
                  `type "${  r  }" must have a positive integer typeid pointer`
                ),
              lt.hasOwnProperty(t))
            ) {
              if (n.Na) return;
              dt(`Cannot register type '${  r  }' twice`);
            }
            (lt[t] = e),
              delete st[t],
              ct.hasOwnProperty(t) &&
                ((e = ct[t]),
                delete ct[t],
                e.forEach((t) => {
                  t();
                }));
          }
          function bt(t) {
            return {
              count: t.count,
              qa: t.qa,
              ta: t.ta,
              ga: t.ga,
              ha: t.ha,
              ka: t.ka,
              la: t.la,
            };
          }
          function Et(t) {
            dt(`${t.ea.ha.fa.name  } instance already deleted`);
          }
          let Ct = !1;
          function _t() {}
          function Tt(t) {
            --t.count.value,
              t.count.value === 0 && (t.ka ? t.la.pa(t.ka) : t.ha.fa.pa(t.ga));
          }
          function At(t) {
            return typeof FinalizationGroup === "undefined"
              ? ((At = function (t) {
                  return t;
                }),
                t)
              : ((Ct = new FinalizationGroup((t) => {
                  for (let e = t.next(); !e.done; e = t.next())
                    {(e = e.value).ga
                      ? Tt(e)
                      : console.warn(`object already deleted: ${  e.ga}`);}
                })),
                (_t = function (t) {
                  Ct.unregister(t.ea);
                }),
                (At = function (t) {
                  return Ct.register(t, t.ea, t.ea), t;
                })(t));
          }
          let kt = void 0;
            const xt = [];
          function jt() {
            for (; xt.length; ) {
              const t = xt.pop();
              (t.ea.qa = !1), t.delete();
            }
          }
          function Ot() {}
          const Pt = {};
          function Ft(t, e, n) {
            if (void 0 === t[e].ia) {
              const r = t[e];
              (t[e] = function () {
                return (
                  t[e].ia.hasOwnProperty(arguments.length) ||
                    dt(
                      `Function '${ 
                        n 
                        }' called with an invalid number of arguments (${ 
                        arguments.length 
                        }) - expects one of (${ 
                        t[e].ia 
                        })!`
                    ),
                  t[e].ia[arguments.length].apply(this, arguments)
                );
              }),
                (t[e].ia = []),
                (t[e].ia[r.wa] = r);
            }
          }
          function St(t, e, n) {
            o.hasOwnProperty(t)
              ? ((void 0 === n ||
                  (void 0 !== o[t].ia && void 0 !== o[t].ia[n])) &&
                  dt(`Cannot register public name '${  t  }' twice`),
                Ft(o, t, t),
                o.hasOwnProperty(n) &&
                  dt(
                    `Cannot register multiple overloads of a function with the same number of arguments (${ 
                      n 
                      })!`
                  ),
                (o[t].ia[n] = e))
              : ((o[t] = e), void 0 !== n && (o[t].fb = n));
          }
          function Dt(t, e, n, r, a, i, o, u) {
            (this.name = t),
              (this.constructor = e),
              (this.ra = n),
              (this.pa = r),
              (this.ma = a),
              (this.La = i),
              (this.va = o),
              (this.Ia = u),
              (this.Qa = []);
          }
          function Wt(t, e, n) {
            for (; e !== n; )
              {e.va ||
                dt(
                  `Expected null or instance of ${ 
                    n.name 
                    }, got an instance of ${ 
                    e.name}`
                ),
                (t = e.va(t)),
                (e = e.ma);}
            return t;
          }
          function Lt(t, e) {
            return e === null
              ? (this.Da && dt(`null is not a valid ${  this.name}`), 0)
              : (e.ea || dt(`Cannot pass "${  ne(e)  }" as a ${  this.name}`),
                e.ea.ga ||
                  dt(
                    `Cannot pass deleted object as a pointer of type ${ 
                      this.name}`
                  ),
                Wt(e.ea.ga, e.ea.ha.fa, this.fa));
          }
          function Mt(t, e) {
            if (e === null) {
              if (
                (this.Da && dt(`null is not a valid ${  this.name}`), this.ya)
              ) {
                var n = this.Ra();
                return t !== null && t.push(this.pa, n), n;
              }
              return 0;
            }
            if (
              (e.ea || dt(`Cannot pass "${  ne(e)  }" as a ${  this.name}`),
              e.ea.ga ||
                dt(
                  `Cannot pass deleted object as a pointer of type ${  this.name}`
                ),
              !this.xa &&
                e.ea.ha.xa &&
                dt(
                  `Cannot convert argument of type ${ 
                    e.ea.la ? e.ea.la.name : e.ea.ha.name 
                    } to parameter type ${ 
                    this.name}`
                ),
              (n = Wt(e.ea.ga, e.ea.ha.fa, this.fa)),
              this.ya)
            )
              {switch (
                (void 0 === e.ea.ka &&
                  dt("Passing raw pointer to smart pointer is illegal"),
                this.Ta)
              ) {
                case 0:
                  e.ea.la === this
                    ? (n = e.ea.ka)
                    : dt(
                        `Cannot convert argument of type ${ 
                          e.ea.la ? e.ea.la.name : e.ea.ha.name 
                          } to parameter type ${ 
                          this.name}`
                      );
                  break;
                case 1:
                  n = e.ea.ka;
                  break;
                case 2:
                  if (e.ea.la === this) n = e.ea.ka;
                  else {
                    const r = e.clone();
                    (n = this.Sa(
                      n,
                      $t(() => {
                        r.delete();
                      })
                    )),
                      t !== null && t.push(this.pa, n);
                  }
                  break;
                default:
                  dt("Unsupporting sharing policy");
              }}
            return n;
          }
          function It(t, e) {
            return e === null
              ? (this.Da && dt(`null is not a valid ${  this.name}`), 0)
              : (e.ea || dt(`Cannot pass "${  ne(e)  }" as a ${  this.name}`),
                e.ea.ga ||
                  dt(
                    `Cannot pass deleted object as a pointer of type ${ 
                      this.name}`
                  ),
                e.ea.ha.xa &&
                  dt(
                    `Cannot convert argument of type ${ 
                      e.ea.ha.name 
                      } to parameter type ${ 
                      this.name}`
                  ),
                Wt(e.ea.ga, e.ea.ha.fa, this.fa));
          }
          function Rt(t) {
            return this.fromWireType(M[t >> 2]);
          }
          const Ut = {};
          function Nt(t, e) {
            return (
              (e.ha && e.ga) || vt("makeClassHandle requires ptr and ptrType"),
              !!e.la != !!e.ka &&
                vt("Both smartPtrType and smartPtr must be specified"),
              (e.count = { value: 1 }),
              At(Object.create(t, { ea: { value: e } }))
            );
          }
          function Yt(t, e, n, r) {
            (this.name = t),
              (this.fa = e),
              (this.Da = n),
              (this.xa = r),
              (this.ya = !1),
              (this.pa =
                this.Sa =
                this.Ra =
                this.Ga =
                this.Ta =
                this.Pa =
                  void 0),
              void 0 !== e.ma
                ? (this.toWireType = Mt)
                : ((this.toWireType = r ? Lt : It), (this.na = null));
          }
          function Ht(t, e, n) {
            o.hasOwnProperty(t) || vt("Replacing nonexistant public symbol"),
              void 0 !== o[t].ia && void 0 !== n
                ? (o[t].ia[n] = e)
                : ((o[t] = e), (o[t].wa = n));
          }
          function Bt(t, e) {
            if (((t = ut(t)), void 0 !== o[`FUNCTION_TABLE_${  t}`]))
              {var n = o[`FUNCTION_TABLE_${  t}`][e];}
            else if (typeof FUNCTION_TABLE !== "undefined")
              {n = FUNCTION_TABLE[e];}
            else {
              void 0 === (n = o[`dynCall_${  t}`]) &&
                void 0 === (n = o[`dynCall_${  t.replace(/f/g, "d")}`]) &&
                dt(`No dynCall invoker for signature: ${  t}`);
              for (var r = [], a = 1; a < t.length; ++a) r.push(`a${  a}`);
              (a =
                `return function dynCall_${ 
                t 
                }_${ 
                e 
                }(${ 
                r.join(", ") 
                }) {\n`),
                (a +=
                  `    return dynCall(rawFunction${ 
                  r.length ? ", " : "" 
                  }${r.join(", ") 
                  });\n`),
                (n = new Function("dynCall", "rawFunction", `${a  }};\n`)(n, e));
            }
            return (
              typeof n !== "function" &&
                dt(`unknown function pointer with signature ${  t  }: ${  e}`),
              n
            );
          }
          let Vt = void 0;
          function zt(t) {
            const e = ut((t = Ee(t)));
            return be(t), e;
          }
          function Gt(t, e) {
            const n = [];
              const r = {};
            throw (
              (e.forEach(function t(e) {
                r[e] ||
                  lt[e] ||
                  (st[e] ? st[e].forEach(t) : (n.push(e), (r[e] = !0)));
              }),
              new Vt(`${t  }: ${  n.map(zt).join([", "])}`))
            );
          }
          function qt(t, e) {
            for (var n = [], r = 0; r < t; r++) n.push(L[(e >> 2) + r]);
            return n;
          }
          function Jt(t) {
            for (; t.length; ) {
              const e = t.pop();
              t.pop()(e);
            }
          }
          function Xt(t, e, n, r, a) {
            let i = e.length;
            i < 2 &&
              dt(
                "argTypes array size mismatch! Must at least get return value and 'this' types!"
              );
            const o = e[1] !== null && n !== null;
              let u = !1;
            for (n = 1; n < e.length; ++n)
              {if (e[n] !== null && void 0 === e[n].na) {
                u = !0;
                break;
              }}
            const c = e[0].name !== "void";
              let l = "";
              let s = "";
            for (n = 0; n < i - 2; ++n)
              {(l += `${n !== 0 ? ", " : ""  }arg${  n}`),
                (s += `${n !== 0 ? ", " : ""  }arg${  n  }Wired`);}
            (t =
              `return function ${ 
              ft(t) 
              }(${ 
              l 
              }) {\nif (arguments.length !== ${ 
              i - 2 
              }) {\nthrowBindingError('function ${ 
              t 
              } called with ' + arguments.length + ' arguments, expected ${ 
              i - 2 
              } args!');\n}\n`),
              u && (t += "var destructors = [];\n");
            const f = u ? "destructors" : "null";
            for (
              l =
                "throwBindingError invoker fn runDestructors retType classParam".split(
                  " "
                ),
                r = [dt, r, a, Jt, e[0], e[1]],
                o &&
                  (t +=
                    `var thisWired = classParam.toWireType(${ 
                    f 
                    }, this);\n`),
                n = 0;
              n < i - 2;
              ++n
            )
              {(t +=
                `var arg${ 
                n 
                }Wired = argType${ 
                n 
                }.toWireType(${ 
                f 
                }, arg${ 
                n 
                }); // ${ 
                e[n + 2].name 
                }\n`),
                l.push(`argType${  n}`),
                r.push(e[n + 2]);}
            if (
              (o && (s = `thisWired${  s.length > 0 ? ", " : ""  }${s}`),
              (t +=
                `${c ? "var rv = " : "" 
                }invoker(fn${ 
                s.length > 0 ? ", " : "" 
                }${s 
                });\n`),
              u)
            )
              {t += "runDestructors(destructors);\n";}
            else
              {for (n = o ? 1 : 2; n < e.length; ++n)
                {(i = n === 1 ? "thisWired" : `arg${  n - 2  }Wired`),
                  e[n].na !== null &&
                    ((t += `${i  }_dtor(${  i  }); // ${  e[n].name  }\n`),
                    l.push(`${i  }_dtor`),
                    r.push(e[n].na));}}
            return (
              c && (t += "var ret = retType.fromWireType(rv);\nreturn ret;\n"),
              l.push(`${t  }}\n`),
              (function (t) {
                const e = Function;
                if (!(e instanceof Function))
                  {throw new TypeError(
                    `new_ called with constructor type ${ 
                      typeof e 
                      } which is not a function`
                  );}
                let n = pt(e.name || "unknownFunctionName", () => {});
                return (
                  (n.prototype = e.prototype),
                  (n = new n()),
                  (t = e.apply(n, t)) instanceof Object ? t : n
                );
              })(l).apply(null, r)
            );
          }
          const Zt = [];
            const Kt = [
              {},
              { value: void 0 },
              { value: null },
              { value: !0 },
              { value: !1 },
            ];
          function Qt(t) {
            t > 4 && --Kt[t].Ea == 0 && ((Kt[t] = void 0), Zt.push(t));
          }
          function $t(t) {
            switch (t) {
              case void 0:
                return 1;
              case null:
                return 2;
              case !0:
                return 3;
              case !1:
                return 4;
              default:
                var e = Zt.length ? Zt.pop() : Kt.length;
                return (Kt[e] = { Ea: 1, value: t }), e;
            }
          }
          function te(t, e, n) {
            switch (e) {
              case 0:
                return function (t) {
                  return this.fromWireType((n ? F : S)[t]);
                };
              case 1:
                return function (t) {
                  return this.fromWireType((n ? D : W)[t >> 1]);
                };
              case 2:
                return function (t) {
                  return this.fromWireType((n ? L : M)[t >> 2]);
                };
              default:
                throw new TypeError(`Unknown integer type: ${  t}`);
            }
          }
          function ee(t, e) {
            const n = lt[t];
            return void 0 === n && dt(`${e  } has unknown type ${  zt(t)}`), n;
          }
          function ne(t) {
            if (t === null) return "null";
            const e = typeof t;
            return e === "object" || e === "array" || e === "function"
              ? t.toString()
              : `${  t}`;
          }
          function re(t, e) {
            switch (e) {
              case 2:
                return function (t) {
                  return this.fromWireType(I[t >> 2]);
                };
              case 3:
                return function (t) {
                  return this.fromWireType(R[t >> 3]);
                };
              default:
                throw new TypeError(`Unknown float type: ${  t}`);
            }
          }
          function ae(t, e, n) {
            switch (e) {
              case 0:
                return n
                  ? function (t) {
                      return F[t];
                    }
                  : function (t) {
                      return S[t];
                    };
              case 1:
                return n
                  ? function (t) {
                      return D[t >> 1];
                    }
                  : function (t) {
                      return W[t >> 1];
                    };
              case 2:
                return n
                  ? function (t) {
                      return L[t >> 2];
                    }
                  : function (t) {
                      return M[t >> 2];
                    };
              default:
                throw new TypeError(`Unknown integer type: ${  t}`);
            }
          }
          let ie;
            const oe = {};
          function ue() {
            if (!ie) {
              let t;
                const e = {
                  USER: "web_user",
                  LOGNAME: "web_user",
                  PATH: "/",
                  PWD: "/",
                  HOME: "/home/web_user",
                  LANG:
                    `${(
                      (typeof navigator === "object" &&
                        navigator.languages &&
                        navigator.languages[0]) ||
                      "C"
                    ).replace("-", "_")  }.UTF-8`,
                  _: f,
                };
              for (t in oe) e[t] = oe[t];
              const n = [];
              for (t in e) n.push(`${t  }=${  e[t]}`);
              ie = n;
            }
            return ie;
          }
          function ce(t) {
            return t % 4 == 0 && (t % 100 != 0 || t % 400 == 0);
          }
          function le(t, e) {
            for (var n = 0, r = 0; r <= e; n += t[r++]);
            return n;
          }
          const se = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            const fe = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
          function pe(t, e) {
            for (t = new Date(t.getTime()); e > 0; ) {
              const n = t.getMonth();
                const r = (ce(t.getFullYear()) ? se : fe)[n];
              if (!(e > r - t.getDate())) {
                t.setDate(t.getDate() + e);
                break;
              }
              (e -= r - t.getDate() + 1),
                t.setDate(1),
                n < 11
                  ? t.setMonth(n + 1)
                  : (t.setMonth(0), t.setFullYear(t.getFullYear() + 1));
            }
            return t;
          }
          for (var he = Array(256), ye = 0; ye < 256; ++ye)
            {he[ye] = String.fromCharCode(ye);}
          (ot = he),
            (yt = o.BindingError = ht("BindingError")),
            (mt = o.InternalError = ht("InternalError")),
            (Ot.prototype.isAliasOf = function (t) {
              if (!(this instanceof Ot && t instanceof Ot)) return !1;
              let e = this.ea.ha.fa;
                let n = this.ea.ga;
                let r = t.ea.ha.fa;
              for (t = t.ea.ga; e.ma; ) (n = e.va(n)), (e = e.ma);
              for (; r.ma; ) (t = r.va(t)), (r = r.ma);
              return e === r && n === t;
            }),
            (Ot.prototype.clone = function () {
              if ((this.ea.ga || Et(this), this.ea.ta))
                {return (this.ea.count.value += 1), this;}
              const t = At(
                Object.create(Object.getPrototypeOf(this), {
                  ea: { value: bt(this.ea) },
                })
              );
              return (t.ea.count.value += 1), (t.ea.qa = !1), t;
            }),
            (Ot.prototype.delete = function () {
              this.ea.ga || Et(this),
                this.ea.qa &&
                  !this.ea.ta &&
                  dt("Object already scheduled for deletion"),
                _t(this),
                Tt(this.ea),
                this.ea.ta || ((this.ea.ka = void 0), (this.ea.ga = void 0));
            }),
            (Ot.prototype.isDeleted = function () {
              return !this.ea.ga;
            }),
            (Ot.prototype.deleteLater = function () {
              return (
                this.ea.ga || Et(this),
                this.ea.qa &&
                  !this.ea.ta &&
                  dt("Object already scheduled for deletion"),
                xt.push(this),
                xt.length === 1 && kt && kt(jt),
                (this.ea.qa = !0),
                this
              );
            }),
            (Yt.prototype.Ma = function (t) {
              return this.Ga && (t = this.Ga(t)), t;
            }),
            (Yt.prototype.Fa = function (t) {
              this.pa && this.pa(t);
            }),
            (Yt.prototype.argPackAdvance = 8),
            (Yt.prototype.readValueFromPointer = Rt),
            (Yt.prototype.deleteObject = function (t) {
              t !== null && t.delete();
            }),
            (Yt.prototype.fromWireType = function (t) {
              function e() {
                return this.ya
                  ? Nt(this.fa.ra, { ha: this.Pa, ga: n, la: this, ka: t })
                  : Nt(this.fa.ra, { ha: this, ga: t });
              }
              var n = this.Ma(t);
              if (!n) return this.Fa(t), null;
              let r = (function (t, e) {
                for (void 0 === e && dt("ptr should not be undefined"); t.ma; )
                  {(e = t.va(e)), (t = t.ma);}
                return Ut[e];
              })(this.fa, n);
              if (void 0 !== r)
                {return r.ea.count.value === 0
                  ? ((r.ea.ga = n), (r.ea.ka = t), r.clone())
                  : ((r = r.clone()), this.Fa(t), r);}
              if (((r = this.fa.La(n)), !(r = Pt[r]))) return e.call(this);
              r = this.xa ? r.Ha : r.pointerType;
              const a = (function t(e, n, r) {
                return n === r
                  ? e
                  : void 0 === r.ma
                  ? null
                  : (e = t(e, n, r.ma)) === null
                  ? null
                  : r.Ia(e);
              })(n, this.fa, r.fa);
              return a === null
                ? e.call(this)
                : this.ya
                ? Nt(r.fa.ra, { ha: r, ga: a, la: this, ka: t })
                : Nt(r.fa.ra, { ha: r, ga: a });
            }),
            (o.getInheritedInstanceCount = function () {
              return Object.keys(Ut).length;
            }),
            (o.getLiveInheritedInstances = function () {
              let t;
                const e = [];
              for (t in Ut) Ut.hasOwnProperty(t) && e.push(Ut[t]);
              return e;
            }),
            (o.flushPendingDeletes = jt),
            (o.setDelayFunction = function (t) {
              (kt = t), xt.length && kt && kt(jt);
            }),
            (Vt = o.UnboundTypeError = ht("UnboundTypeError")),
            (o.count_emval_handles = function () {
              for (var t = 0, e = 5; e < Kt.length; ++e)
                {void 0 !== Kt[e] && ++t;}
              return t;
            }),
            (o.get_first_emval = function () {
              for (let t = 5; t < Kt.length; ++t)
                {if (void 0 !== Kt[t]) return Kt[t];}
              return null;
            });
          const de = {
              E () {},
              z () {
                return (
                  o.___errno_location && (L[o.___errno_location() >> 2] = 63),
                  -1
                );
              },
              y (t, e) {
                nt = e;
                try {
                  const n = rt();
                    const r = rt();
                  if (n === -1 || r === 0) var a = -28;
                  else {
                    const i = at.Oa[n];
                    if (i && r === i.bb) {
                      const o = (void 0).$a(i.fd);
                      at.Za(n, o, r, i.flags),
                        (void 0).eb(o),
                        (at.Oa[n] = null),
                        i.Ya && be(i.cb);
                    }
                    a = 0;
                  }
                  return a;
                } catch (u) {
                  return Z(u), -u.Ja;
                }
              },
              k () {},
              v (t, e, n, r, a) {
                const i = it(n);
                wt(t, {
                  name: (e = ut(e)),
                  fromWireType (t) {
                    return !!t;
                  },
                  toWireType (t, e) {
                    return e ? r : a;
                  },
                  argPackAdvance: 8,
                  readValueFromPointer (t) {
                    if (n === 1) var r = F;
                    else if (n === 2) r = D;
                    else {
                      if (n !== 4)
                        {throw new TypeError(`Unknown boolean type size: ${  e}`);}
                      r = L;
                    }
                    return this.fromWireType(r[t >> i]);
                  },
                  na: null,
                });
              },
              g (t, e, n, r, a, i, o, u, c, l, s, f, p) {
                (s = ut(s)),
                  (i = Bt(a, i)),
                  u && (u = Bt(o, u)),
                  l && (l = Bt(c, l)),
                  (p = Bt(f, p));
                const h = ft(s);
                St(h, () => {
                  Gt(`Cannot construct ${  s  } due to unbound types`, [r]);
                }),
                  gt([t, e, n], r ? [r] : [], (e) => {
                    if (((e = e[0]), r))
                      {var n = e.fa;
                        var a = n.ra;}
                    else a = Ot.prototype;
                    e = pt(h, function () {
                      if (Object.getPrototypeOf(this) !== o)
                        {throw new yt(`Use 'new' to construct ${  s}`);}
                      if (void 0 === c.oa)
                        {throw new yt(`${s  } has no accessible constructor`);}
                      const t = c.oa[arguments.length];
                      if (void 0 === t)
                        {throw new yt(
                          `Tried to invoke ctor of ${ 
                            s 
                            } with invalid number of parameters (${ 
                            arguments.length 
                            }) - expected (${ 
                            Object.keys(c.oa).toString() 
                            }) parameters instead!`
                        );}
                      return t.apply(this, arguments);
                    });
                    var o = Object.create(a, { constructor: { value: e } });
                    e.prototype = o;
                    var c = new Dt(s, e, o, p, n, i, u, l);
                    (n = new Yt(s, c, !0, !1)),
                      (a = new Yt(`${s  }*`, c, !1, !1));
                    const f = new Yt(`${s  } const*`, c, !1, !0);
                    return (
                      (Pt[t] = { pointerType: a, Ha: f }), Ht(h, e), [n, a, f]
                    );
                  });
              },
              f (t, e, n, r, a, i) {
                const o = qt(e, n);
                a = Bt(r, a);
                const u = [i];
                  const c = [];
                gt([], [t], (t) => {
                  const n = `constructor ${  (t = t[0]).name}`;
                  if (
                    (void 0 === t.fa.oa && (t.fa.oa = []),
                    void 0 !== t.fa.oa[e - 1])
                  )
                    {throw new yt(
                      `Cannot register multiple constructors with identical number of parameters (${ 
                        e - 1 
                        }) for class '${ 
                        t.name 
                        }'! Overload resolution is currently only performed using the parameter count, not actual type info!`
                    );}
                  return (
                    (t.fa.oa[e - 1] = function () {
                      Gt(
                        `Cannot construct ${  t.name  } due to unbound types`,
                        o
                      );
                    }),
                    gt([], o, (r) => ((
                        (t.fa.oa[e - 1] = function () {
                          arguments.length !== e - 1 &&
                            dt(
                              `${n 
                                } called with ${ 
                                arguments.length 
                                } arguments, expected ${ 
                                e - 1}`
                            ),
                            (c.length = 0),
                            (u.length = e);
                          for (var t = 1; t < e; ++t)
                            {u[t] = r[t].toWireType(c, arguments[t - 1]);}
                          return (
                            (t = a.apply(null, u)), Jt(c), r[0].fromWireType(t)
                          );
                        }),
                        []
                      ))),
                    []
                  );
                });
              },
              c (t, e, n, r, a, i, o, u) {
                const c = qt(n, r);
                (e = ut(e)),
                  (i = Bt(a, i)),
                  gt([], [t], (t) => {
                    function r() {
                      Gt(`Cannot call ${  a  } due to unbound types`, c);
                    }
                    var a = `${(t = t[0]).name  }.${  e}`;
                    u && t.fa.Qa.push(e);
                    const l = t.fa.ra;
                      const s = l[e];
                    return (
                      void 0 === s ||
                      (void 0 === s.ia &&
                        s.className !== t.name &&
                        s.wa === n - 2)
                        ? ((r.wa = n - 2), (r.className = t.name), (l[e] = r))
                        : (Ft(l, e, a), (l[e].ia[n - 2] = r)),
                      gt([], c, (r) => ((
                          (r = Xt(a, r, t, i, o)),
                          void 0 === l[e].ia
                            ? ((r.wa = n - 2), (l[e] = r))
                            : (l[e].ia[n - 2] = r),
                          []
                        ))),
                      []
                    );
                  });
              },
              t (t, e) {
                wt(t, {
                  name: (e = ut(e)),
                  fromWireType (t) {
                    const e = Kt[t].value;
                    return Qt(t), e;
                  },
                  toWireType (t, e) {
                    return $t(e);
                  },
                  argPackAdvance: 8,
                  readValueFromPointer: Rt,
                  na: null,
                });
              },
              o (t, e, n, r) {
                function a() {}
                (n = it(n)),
                  (e = ut(e)),
                  (a.values = {}),
                  wt(t, {
                    name: e,
                    constructor: a,
                    fromWireType (t) {
                      return this.constructor.values[t];
                    },
                    toWireType (t, e) {
                      return e.value;
                    },
                    argPackAdvance: 8,
                    readValueFromPointer: te(e, n, r),
                    na: null,
                  }),
                  St(e, a);
              },
              b (t, e, n) {
                let r = ee(t, "enum");
                (e = ut(e)),
                  (t = r.constructor),
                  (r = Object.create(r.constructor.prototype, {
                    value: { value: n },
                    constructor: {
                      value: pt(`${r.name  }_${  e}`, () => {}),
                    },
                  })),
                  (t.values[n] = r),
                  (t[e] = r);
              },
              i (t, e, n) {
                (n = it(n)),
                  wt(t, {
                    name: (e = ut(e)),
                    fromWireType (t) {
                      return t;
                    },
                    toWireType (t, e) {
                      if (typeof e !== "number" && typeof e !== "boolean")
                        {throw new TypeError(
                          `Cannot convert "${  ne(e)  }" to ${  this.name}`
                        );}
                      return e;
                    },
                    argPackAdvance: 8,
                    readValueFromPointer: re(e, n),
                    na: null,
                  });
              },
              l (t, e, n, r, a, i) {
                const o = qt(e, n);
                (t = ut(t)),
                  (a = Bt(r, a)),
                  St(
                    t,
                    () => {
                      Gt(`Cannot call ${  t  } due to unbound types`, o);
                    },
                    e - 1
                  ),
                  gt([], o, (n) => ((
                      (n = [n[0], null].concat(n.slice(1))),
                      Ht(t, Xt(t, n, null, a, i), e - 1),
                      []
                    )));
              },
              e (t, e, n, r, a) {
                function i(t) {
                  return t;
                }
                (e = ut(e)), a === -1 && (a = 4294967295);
                const o = it(n);
                if (r === 0) {
                  const u = 32 - 8 * n;
                  i = function (t) {
                    return (t << u) >>> u;
                  };
                }
                const c = e.indexOf("unsigned") != -1;
                wt(t, {
                  name: e,
                  fromWireType: i,
                  toWireType (t, n) {
                    if (typeof n !== "number" && typeof n !== "boolean")
                      {throw new TypeError(
                        `Cannot convert "${  ne(n)  }" to ${  this.name}`
                      );}
                    if (n < r || n > a)
                      {throw new TypeError(
                        `Passing a number "${ 
                          ne(n) 
                          }" from JS side to C/C++ side to an argument of type "${ 
                          e 
                          }", which is outside the valid range [${ 
                          r 
                          }, ${ 
                          a 
                          }]!`
                      );}
                    return c ? n >>> 0 : 0 | n;
                  },
                  argPackAdvance: 8,
                  readValueFromPointer: ae(e, o, r !== 0),
                  na: null,
                });
              },
              d (t, e, n) {
                function r(t) {
                  return (t >>= 2), new a(M.buffer, M[t + 1], M[t]);
                }
                var a = [
                  Int8Array,
                  Uint8Array,
                  Int16Array,
                  Uint16Array,
                  Int32Array,
                  Uint32Array,
                  Float32Array,
                  Float64Array,
                ][e];
                wt(
                  t,
                  {
                    name: (n = ut(n)),
                    fromWireType: r,
                    argPackAdvance: 8,
                    readValueFromPointer: r,
                  },
                  { Na: !0 }
                );
              },
              j (t, e) {
                const n = (e = ut(e)) === "std::string";
                wt(t, {
                  name: e,
                  fromWireType (t) {
                    const e = M[t >> 2];
                    if (n) {
                      var r = S[t + 4 + e];
                        let a = 0;
                      r != 0 && ((a = r), (S[t + 4 + e] = 0));
                      let i = t + 4;
                      for (r = 0; r <= e; ++r) {
                        const o = t + 4 + r;
                        if (S[o] == 0) {
                          if (((i = x(i)), void 0 === u)) var u = i;
                          else (u += String.fromCharCode(0)), (u += i);
                          i = o + 1;
                        }
                      }
                      a != 0 && (S[t + 4 + e] = a);
                    } else {
                      for (u = Array(e), r = 0; r < e; ++r)
                        {u[r] = String.fromCharCode(S[t + 4 + r]);}
                      u = u.join("");
                    }
                    return be(t), u;
                  },
                  toWireType (t, e) {
                    e instanceof ArrayBuffer && (e = new Uint8Array(e));
                    let r = typeof e === "string";
                    r ||
                      e instanceof Uint8Array ||
                      e instanceof Uint8ClampedArray ||
                      e instanceof Int8Array ||
                      dt("Cannot pass non-string to std::string");
                    const a = (
                        n && r
                          ? function () {
                              return O(e);
                            }
                          : function () {
                              return e.length;
                            }
                      )();
                      const i = we(4 + a + 1);
                    if (((M[i >> 2] = a), n && r)) j(e, S, i + 4, a + 1);
                    else if (r)
                      {for (r = 0; r < a; ++r) {
                        const o = e.charCodeAt(r);
                        o > 255 &&
                          (be(i),
                          dt(
                            "String has UTF-16 code units that do not fit in 8 bits"
                          )),
                          (S[i + 4 + r] = o);
                      }}
                    else for (r = 0; r < a; ++r) S[i + 4 + r] = e[r];
                    return t !== null && t.push(be, i), i;
                  },
                  argPackAdvance: 8,
                  readValueFromPointer: Rt,
                  na (t) {
                    be(t);
                  },
                });
              },
              u (t, e, n) {
                if (((n = ut(n)), e === 2))
                  {var r = function () {
                      return W;
                    };
                    var a = 1;}
                else
                  {e === 4 &&
                    ((r = function () {
                      return M;
                    }),
                    (a = 2));}
                wt(t, {
                  name: n,
                  fromWireType (t) {
                    for (
                      var e = r(),
                        n = M[t >> 2],
                        i = Array(n),
                        o = (t + 4) >> a,
                        u = 0;
                      u < n;
                      ++u
                    )
                      {i[u] = String.fromCharCode(e[o + u]);}
                    return be(t), i.join("");
                  },
                  toWireType (t, n) {
                    const i = n.length;
                      const o = we(4 + i * e);
                      const u = r();
                    M[o >> 2] = i;
                    for (let c = (o + 4) >> a, l = 0; l < i; ++l)
                      {u[c + l] = n.charCodeAt(l);}
                    return t !== null && t.push(be, o), o;
                  },
                  argPackAdvance: 8,
                  readValueFromPointer: Rt,
                  na (t) {
                    be(t);
                  },
                });
              },
              w (t, e) {
                wt(t, {
                  ab: !0,
                  name: (e = ut(e)),
                  argPackAdvance: 0,
                  fromWireType () {},
                  toWireType () {},
                });
              },
              m: Qt,
              n (t) {
                t > 4 && (Kt[t].Ea += 1);
              },
              h (t, e) {
                return $t(
                  (t = (t = ee(t, "_emval_take_value")).readValueFromPointer(e))
                );
              },
              a () {
                Z();
              },
              r (t, e, n) {
                S.set(S.subarray(e, e + n), t);
              },
              s () {
                Z("OOM");
              },
              A (t, e) {
                let n = 0;
                return (
                  ue().forEach((r, a) => {
                    let i = e + n;
                    for (a = L[(t + 4 * a) >> 2] = i, i = 0; i < r.length; ++i)
                      {F[a++ >> 0] = r.charCodeAt(i);}
                    (F[a >> 0] = 0), (n += r.length + 1);
                  }),
                  0
                );
              },
              B (t, e) {
                const n = ue();
                L[t >> 2] = n.length;
                let r = 0;
                return (
                  n.forEach((t) => {
                    r += t.length + 1;
                  }),
                  (L[e >> 2] = r),
                  0
                );
              },
              D () {
                return 0;
              },
              p () {
                return 0;
              },
              C (t, e, n, r) {
                try {
                  for (var a = 0, i = 0; i < n; i++) {
                    for (
                      var o = L[(e + 8 * i) >> 2],
                        u = L[(e + (8 * i + 4)) >> 2],
                        c = 0;
                      c < u;
                      c++
                    ) {
                      const l = S[o + c];
                        const s = et[t];
                      l === 0 || l === 10
                        ? ((t === 1 ? b : E)(k(s, 0)), (s.length = 0))
                        : s.push(l);
                    }
                    a += u;
                  }
                  return (L[r >> 2] = a), 0;
                } catch (f) {
                  return Z(f), f.Ja;
                }
              },
              memory: C,
              q () {},
              x (t, e, n, r) {
                return (function (t, e, n, r) {
                  function a(t, e, n) {
                    for (
                      t = typeof t === "number" ? t.toString() : t || "";
                      t.length < e;

                    )
                      {t = n[0] + t;}
                    return t;
                  }
                  function i(t, e) {
                    return a(t, e, "0");
                  }
                  function o(t, e) {
                    function n(t) {
                      return t < 0 ? -1 : t > 0 ? 1 : 0;
                    }
                    let r;
                    return (
                      (r = n(t.getFullYear() - e.getFullYear())) === 0 &&
                        (r = n(t.getMonth() - e.getMonth())) === 0 &&
                        (r = n(t.getDate() - e.getDate())),
                      r
                    );
                  }
                  function u(t) {
                    switch (t.getDay()) {
                      case 0:
                        return new Date(t.getFullYear() - 1, 11, 29);
                      case 1:
                        return t;
                      case 2:
                        return new Date(t.getFullYear(), 0, 3);
                      case 3:
                        return new Date(t.getFullYear(), 0, 2);
                      case 4:
                        return new Date(t.getFullYear(), 0, 1);
                      case 5:
                        return new Date(t.getFullYear() - 1, 11, 31);
                      case 6:
                        return new Date(t.getFullYear() - 1, 11, 30);
                    }
                  }
                  function c(t) {
                    t = pe(new Date(t.ja + 1900, 0, 1), t.Ba);
                    const e = u(new Date(t.getFullYear() + 1, 0, 4));
                    return o(u(new Date(t.getFullYear(), 0, 4)), t) <= 0
                      ? o(e, t) <= 0
                        ? t.getFullYear() + 1
                        : t.getFullYear()
                      : t.getFullYear() - 1;
                  }
                  let l = L[(r + 40) >> 2];
                  for (var s in ((r = {
                    Wa: L[r >> 2],
                    Va: L[(r + 4) >> 2],
                    za: L[(r + 8) >> 2],
                    ua: L[(r + 12) >> 2],
                    sa: L[(r + 16) >> 2],
                    ja: L[(r + 20) >> 2],
                    Aa: L[(r + 24) >> 2],
                    Ba: L[(r + 28) >> 2],
                    gb: L[(r + 32) >> 2],
                    Ua: L[(r + 36) >> 2],
                    Xa: l ? x(l) : "",
                  }),
                  (n = x(n)),
                  (l = {
                    "%c": "%a %b %d %H:%M:%S %Y",
                    "%D": "%m/%d/%y",
                    "%F": "%Y-%m-%d",
                    "%h": "%b",
                    "%r": "%I:%M:%S %p",
                    "%R": "%H:%M",
                    "%T": "%H:%M:%S",
                    "%x": "%m/%d/%y",
                    "%X": "%H:%M:%S",
                    "%Ec": "%c",
                    "%EC": "%C",
                    "%Ex": "%m/%d/%y",
                    "%EX": "%H:%M:%S",
                    "%Ey": "%y",
                    "%EY": "%Y",
                    "%Od": "%d",
                    "%Oe": "%e",
                    "%OH": "%H",
                    "%OI": "%I",
                    "%Om": "%m",
                    "%OM": "%M",
                    "%OS": "%S",
                    "%Ou": "%u",
                    "%OU": "%U",
                    "%OV": "%V",
                    "%Ow": "%w",
                    "%OW": "%W",
                    "%Oy": "%y",
                  })))
                    {n = n.replace(new RegExp(s, "g"), l[s]);}
                  const f =
                      "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(
                        " "
                      );
                    const p =
                      "January February March April May June July August September October November December".split(
                        " "
                      );
                  for (s in (l = {
                    "%a": function (t) {
                      return f[t.Aa].substring(0, 3);
                    },
                    "%A": function (t) {
                      return f[t.Aa];
                    },
                    "%b": function (t) {
                      return p[t.sa].substring(0, 3);
                    },
                    "%B": function (t) {
                      return p[t.sa];
                    },
                    "%C": function (t) {
                      return i(((t.ja + 1900) / 100) | 0, 2);
                    },
                    "%d": function (t) {
                      return i(t.ua, 2);
                    },
                    "%e": function (t) {
                      return a(t.ua, 2, " ");
                    },
                    "%g": function (t) {
                      return c(t).toString().substring(2);
                    },
                    "%G": function (t) {
                      return c(t);
                    },
                    "%H": function (t) {
                      return i(t.za, 2);
                    },
                    "%I": function (t) {
                      return (
                        (t = t.za) == 0 ? (t = 12) : t > 12 && (t -= 12),
                        i(t, 2)
                      );
                    },
                    "%j": function (t) {
                      return i(
                        t.ua + le(ce(t.ja + 1900) ? se : fe, t.sa - 1),
                        3
                      );
                    },
                    "%m": function (t) {
                      return i(t.sa + 1, 2);
                    },
                    "%M": function (t) {
                      return i(t.Va, 2);
                    },
                    "%n": function () {
                      return "\n";
                    },
                    "%p": function (t) {
                      return t.za >= 0 && t.za < 12 ? "AM" : "PM";
                    },
                    "%S": function (t) {
                      return i(t.Wa, 2);
                    },
                    "%t": function () {
                      return "\t";
                    },
                    "%u": function (t) {
                      return t.Aa || 7;
                    },
                    "%U": function (t) {
                      const e = new Date(t.ja + 1900, 0, 1);
                        const n = e.getDay() === 0 ? e : pe(e, 7 - e.getDay());
                      return o(n, (t = new Date(t.ja + 1900, t.sa, t.ua))) < 0
                        ? i(
                            Math.ceil(
                              (31 -
                                n.getDate() +
                                (le(
                                  ce(t.getFullYear()) ? se : fe,
                                  t.getMonth() - 1
                                ) -
                                  31) +
                                t.getDate()) /
                                7
                            ),
                            2
                          )
                        : o(n, e) === 0
                        ? "01"
                        : "00";
                    },
                    "%V": function (t) {
                      const e = u(new Date(t.ja + 1900, 0, 4));
                        const n = u(new Date(t.ja + 1901, 0, 4));
                        const r = pe(new Date(t.ja + 1900, 0, 1), t.Ba);
                      return o(r, e) < 0
                        ? "53"
                        : o(n, r) <= 0
                        ? "01"
                        : i(
                            Math.ceil(
                              (e.getFullYear() < t.ja + 1900
                                ? t.Ba + 32 - e.getDate()
                                : t.Ba + 1 - e.getDate()) / 7
                            ),
                            2
                          );
                    },
                    "%w": function (t) {
                      return t.Aa;
                    },
                    "%W": function (t) {
                      const e = new Date(t.ja, 0, 1);
                        const n =
                          e.getDay() === 1
                            ? e
                            : pe(e, e.getDay() === 0 ? 1 : 7 - e.getDay() + 1);
                      return o(n, (t = new Date(t.ja + 1900, t.sa, t.ua))) < 0
                        ? i(
                            Math.ceil(
                              (31 -
                                n.getDate() +
                                (le(
                                  ce(t.getFullYear()) ? se : fe,
                                  t.getMonth() - 1
                                ) -
                                  31) +
                                t.getDate()) /
                                7
                            ),
                            2
                          )
                        : o(n, e) === 0
                        ? "01"
                        : "00";
                    },
                    "%y": function (t) {
                      return (t.ja + 1900).toString().substring(2);
                    },
                    "%Y": function (t) {
                      return t.ja + 1900;
                    },
                    "%z": function (t) {
                      const e = (t = t.Ua) >= 0;
                      return (
                        (t = Math.abs(t) / 60),
                        (e ? "+" : "-") +
                          String(`0000${  (t / 60) * 100 + (t % 60)}`).slice(-4)
                      );
                    },
                    "%Z": function (t) {
                      return t.Xa;
                    },
                    "%%": function () {
                      return "%";
                    },
                  }))
                    {n.indexOf(s) >= 0 &&
                      (n = n.replace(new RegExp(s, "g"), l[s](r)));}
                  return (s = (function (t) {
                    const e = Array(O(t) + 1);
                    return j(t, e, 0, e.length), e;
                  })(n)).length > e
                    ? 0
                    : (F.set(s, t), s.length - 1);
                })(t, e, n, r);
              },
              table: _,
            };
            const me = (function () {
              function t(t) {
                (o.asm = t.exports),
                  q--,
                  o.monitorRunDependencies && o.monitorRunDependencies(q),
                  q == 0 &&
                    (J !== null && (clearInterval(J), (J = null)),
                    X && ((t = X), (X = null), t()));
              }
              function e(e) {
                t(e.instance);
              }
              function n(t) {
                return (
                  w || (!p && !h) || typeof fetch !== "function"
                    ? new Promise((t) => {
                        t(tt());
                      })
                    : fetch(Q, { credentials: "same-origin" })
                        .then((t) => {
                          if (!t.ok)
                            {throw (
                              `failed to load wasm binary file at '${  Q  }'`
                            );}
                          return t.arrayBuffer();
                        })
                        .catch(() => tt())
                )
                  .then((t) => WebAssembly.instantiate(t, r))
                  .then(t, (t) => {
                    E(`failed to asynchronously prepare wasm: ${  t}`), Z(t);
                  });
              }
              var r = { env: de, wasi_unstable: de };
              if (
                (q++,
                o.monitorRunDependencies && o.monitorRunDependencies(q),
                o.instantiateWasm)
              )
                {try {
                  return o.instantiateWasm(r, t);
                } catch (a) {
                  return (
                    E(
                      `Module.instantiateWasm callback failed with error: ${  a}`
                    ),
                    !1
                  );
                }}
              return (
                (function () {
                  if (
                    w ||
                    typeof WebAssembly.instantiateStreaming !== "function" ||
                    K() ||
                    typeof fetch !== "function"
                  )
                    {return n(e);}
                  fetch(Q, { credentials: "same-origin" }).then((t) => WebAssembly.instantiateStreaming(t, r).then(
                      e,
                      (t) => {
                        E(`wasm streaming compile failed: ${  t}`),
                          E("falling back to ArrayBuffer instantiation"),
                          n(e);
                      }
                    ));
                })(),
                {}
              );
            })();
          o.asm = me;
          let ve;
            var ge = (o.___wasm_call_ctors = function () {
              return o.asm.F.apply(null, arguments);
            });
            var we = (o._malloc = function () {
              return o.asm.G.apply(null, arguments);
            });
            var be = (o._free = function () {
              return o.asm.H.apply(null, arguments);
            });
            var Ee = (o.___getTypeName = function () {
              return o.asm.I.apply(null, arguments);
            });
          function Ce() {
            function t() {
              if (!ve && ((ve = !0), !T)) {
                if (
                  (Y(B),
                  Y(V),
                  o.onRuntimeInitialized && o.onRuntimeInitialized(),
                  o.postRun)
                )
                  {for (
                    typeof o.postRun === "function" && (o.postRun = [o.postRun]);
                    o.postRun.length;

                  ) {
                    const t = o.postRun.shift();
                    z.unshift(t);
                  }}
                Y(z);
              }
            }
            if (!(q > 0)) {
              if (o.preRun)
                {for (
                  typeof o.preRun === "function" && (o.preRun = [o.preRun]);
                  o.preRun.length;

                )
                  {G();}}
              Y(H),
                q > 0 ||
                  (o.setStatus
                    ? (o.setStatus("Running..."),
                      setTimeout(() => {
                        setTimeout(() => {
                          o.setStatus("");
                        }, 1),
                          t();
                      }, 1))
                    : t());
            }
          }
          if (
            ((o.___embind_register_native_and_builtin_types = function () {
              return o.asm.J.apply(null, arguments);
            }),
            (o.dynCall_vi = function () {
              return o.asm.K.apply(null, arguments);
            }),
            (o.dynCall_ii = function () {
              return o.asm.L.apply(null, arguments);
            }),
            (o.dynCall_vii = function () {
              return o.asm.M.apply(null, arguments);
            }),
            (o.dynCall_viii = function () {
              return o.asm.N.apply(null, arguments);
            }),
            (o.dynCall_iii = function () {
              return o.asm.O.apply(null, arguments);
            }),
            (o.dynCall_i = function () {
              return o.asm.P.apply(null, arguments);
            }),
            (o.dynCall_iiii = function () {
              return o.asm.Q.apply(null, arguments);
            }),
            (o.dynCall_viiii = function () {
              return o.asm.R.apply(null, arguments);
            }),
            (o.dynCall_iiiii = function () {
              return o.asm.S.apply(null, arguments);
            }),
            (o.dynCall_jiji = function () {
              return o.asm.T.apply(null, arguments);
            }),
            (o.dynCall_iidiiii = function () {
              return o.asm.U.apply(null, arguments);
            }),
            (o.dynCall_iiiiii = function () {
              return o.asm.V.apply(null, arguments);
            }),
            (o.dynCall_iiiiiiiii = function () {
              return o.asm.W.apply(null, arguments);
            }),
            (o.dynCall_iiiiiii = function () {
              return o.asm.X.apply(null, arguments);
            }),
            (o.dynCall_iiiiij = function () {
              return o.asm.Y.apply(null, arguments);
            }),
            (o.dynCall_iiiiid = function () {
              return o.asm.Z.apply(null, arguments);
            }),
            (o.dynCall_iiiiijj = function () {
              return o.asm._.apply(null, arguments);
            }),
            (o.dynCall_iiiiiiii = function () {
              return o.asm.$.apply(null, arguments);
            }),
            (o.dynCall_iiiiiijj = function () {
              return o.asm.aa.apply(null, arguments);
            }),
            (o.dynCall_viiiiii = function () {
              return o.asm.ba.apply(null, arguments);
            }),
            (o.dynCall_v = function () {
              return o.asm.ca.apply(null, arguments);
            }),
            (o.dynCall_viiiii = function () {
              return o.asm.da.apply(null, arguments);
            }),
            (o.asm = me),
            (o.then = function (t) {
              if (ve) t(o);
              else {
                const e = o.onRuntimeInitialized;
                o.onRuntimeInitialized = function () {
                  e && e(), t(o);
                };
              }
              return o;
            }),
            (X = function t() {
              ve || Ce(), ve || (X = t);
            }),
            (o.run = Ce),
            o.preInit)
          )
            {for (
              typeof o.preInit === "function" && (o.preInit = [o.preInit]);
              o.preInit.length > 0;

            )
              {o.preInit.pop()();}}
          return Ce(), r;
        });
    typeof E.exports === "object"
      ? (E.exports = o)
      : typeof E.exports === "object" && (E.exports.anitomyscript = o);
  }.call(this, c, "/build/anitomyscript.js", "/build"),
    (E = E.exports));
  let C;
    const _ = (C = u) && C.__esModule ? C : { default: C };
  function T(t, e, n, r, a, i, o) {
    try {
      var u = t[i](o);
        var c = u.value;
    } catch (l) {
      return void n(l);
    }
    u.done ? e(c) : Promise.resolve(c).then(r, a);
  }
  let A = void 0;
  function k(t) {
    return function () {
      let t;
      return (
        (t = _.default.mark(function t(e) {
          let n; let 
r;
          return _.default.wrap((t) => {
            for (;;)
              {switch ((t.prev = t.next)) {
                case 0:
                  if (!Array.isArray(e)) {
                    t.next = 7;
                    break;
                  }
                  return (
                    (n = O(e)),
                    (r = P(A.parseMultiple(n))),
                    n.delete(),
                    t.abrupt(
                      "return",
                      r.map((t) => x(t))
                    )
                  );
                case 7:
                  return t.abrupt("return", x(A.parseSingle(e)));
                case 8:
                case "end":
                  return t.stop();
              }}
          }, t);
        })),
        function () {
          const e = this;
            const n = arguments;
          return new Promise((r, a) => {
            const i = t.apply(e, n);
            function o(t) {
              T(i, r, a, o, u, "next", t);
            }
            function u(t) {
              T(i, r, a, o, u, "throw", t);
            }
            o(void 0);
          });
        }.apply(this, arguments)
      );
    }.apply(this, arguments);
  }
  function x(t) {
    const e = {
      anime_season: j(t, A.ElementCategory.kElementAnimeSeason),
      season_prefix: j(t, A.ElementCategory.kElementAnimeSeasonPrefix),
      anime_title: j(t, A.ElementCategory.kElementAnimeTitle),
      anime_type: j(t, A.ElementCategory.kElementAnimeType),
      anime_year: j(t, A.ElementCategory.kElementAnimeYear),
      audio_term: j(t, A.ElementCategory.kElementAudioTerm),
      device_compatibility: j(t, A.ElementCategory.kElementDeviceCompatibility),
      episode_number: j(t, A.ElementCategory.kElementEpisodeNumber),
      episode_prefix: j(t, A.ElementCategory.kElementEpisodePrefix),
      episode_title: j(t, A.ElementCategory.kElementEpisodeTitle),
      file_checksum: j(t, A.ElementCategory.kElementFileChecksum),
      file_extension: j(t, A.ElementCategory.kElementFileExtension),
      file_name: j(t, A.ElementCategory.kElementFileName),
      language: j(t, A.ElementCategory.kElementLanguage),
      other: j(t, A.ElementCategory.kElementOther),
      release_group: j(t, A.ElementCategory.kElementReleaseGroup),
      release_information: j(t, A.ElementCategory.kElementReleaseInformation),
      release_version: j(t, A.ElementCategory.kElementReleaseVersion),
      source: j(t, A.ElementCategory.kElementSource),
      subtitles: j(t, A.ElementCategory.kElementSubtitles),
      video_resolution: j(t, A.ElementCategory.kElementVideoResolution),
      video_term: j(t, A.ElementCategory.kElementVideoTerm),
      volume_number: j(t, A.ElementCategory.kElementVolumeNumber),
      volume_prefix: j(t, A.ElementCategory.kElementVolumePrefix),
      unknown: j(t, A.ElementCategory.kElementUnknown),
    };
    return t.delete(), e;
  }
  function j(t, e) {
    return t.count(e) > 1 ? P(t.get_all(e)) : t.get(e) || void 0;
  }
  function O(t) {
    const e = new A.StringVector();
    return (
      t.forEach((t, n) => {
        if (typeof t !== "string")
          {throw new Error("Element at index ".concat(n, " is not a string"));}
        e.push_back(t);
      }),
      e
    );
  }
  function P(t) {
    for (var e = [], n = 0; n < t.size(); n++) e.push(t.get(n));
    return t.delete(), e;
  }
  return function (t) {
    return Array.isArray(t) || typeof t === "string"
      ? A
        ? k(t)
        : new Promise((e, n) => {
            try {
              E().then((r) => {
                (A = r), k(t).then(e).catch(n);
              });
            } catch (r) {
              n(r);
            }
          })
      : Promise.reject(new Error("Input must be either an Array or a string"));
  };
});
